// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview This file defines a Genkit flow for automatically drafting documentation updates or pull requests when code signatures or APIs change.
 *
 * - autonomousDocumentationUpdates - A function that triggers the documentation update flow.
 * - AutonomousDocumentationUpdatesInput - The input type for the autonomousDocumentationUpdates function.
 * - AutonomousDocumentationUpdatesOutput - The return type for the autonomousDocumentationUpdates function.
 */

import {ai} from '@/ai/ai-instance';
import {getGitChanges} from '@/services/git';
import {z} from 'genkit';

const AutonomousDocumentationUpdatesInputSchema = z.object({
  commitHash: z.string().describe('The Git commit hash to analyze for documentation updates.'),
});
export type AutonomousDocumentationUpdatesInput = z.infer<typeof AutonomousDocumentationUpdatesInputSchema>;

const AutonomousDocumentationUpdatesOutputSchema = z.object({
  updates: z.array(
    z.object({
      filePath: z.string().describe('The file path that was changed.'),
      documentationUpdate: z.string().describe('The proposed documentation update for the file.'),
    })
  ).describe('A list of documentation updates for each changed file.'),
});
export type AutonomousDocumentationUpdatesOutput = z.infer<typeof AutonomousDocumentationUpdatesOutputSchema>;

export async function autonomousDocumentationUpdates(input: AutonomousDocumentationUpdatesInput): Promise<AutonomousDocumentationUpdatesOutput> {
  return autonomousDocumentationUpdatesFlow(input);
}

const documentationUpdatePrompt = ai.definePrompt({
  name: 'documentationUpdatePrompt',
  input: {
    schema: z.object({
      filePath: z.string().describe('The file path that was changed.'),
      codeDiff: z.string().describe('The diff between the old and new versions of the file.'),
    }),
  },
  output: {
    schema: z.object({
      documentationUpdate: z.string().describe('The proposed documentation update for the file.'),
    }),
  },
  prompt: `You are an AI assistant that helps generate documentation updates based on code changes.

The following file has been changed:
File Path: {{{filePath}}}

Here is the diff between the old and new versions of the file:
Diff: {{{codeDiff}}}

Based on these changes, draft a documentation update for this file. Be concise and focus on the changes.
`,
});

const autonomousDocumentationUpdatesFlow = ai.defineFlow<
  typeof AutonomousDocumentationUpdatesInputSchema,
  typeof AutonomousDocumentationUpdatesOutputSchema
>(
  {
    name: 'autonomousDocumentationUpdatesFlow',
    inputSchema: AutonomousDocumentationUpdatesInputSchema,
    outputSchema: AutonomousDocumentationUpdatesOutputSchema,
  },
  async input => {
    const gitChanges = await getGitChanges(input.commitHash);

    const updates = [];

    for (const change of gitChanges) {
      const {output} = await documentationUpdatePrompt({
        filePath: change.filePath,
        codeDiff: change.diff,
      });

      updates.push({
        filePath: change.filePath,
        documentationUpdate: output!.documentationUpdate,
      });
    }

    return {
      updates,
    };
  }
);
