/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as appRouteImport } from './routes/(app)/route'
import { Route as IndexImport } from './routes/index'
import { Route as AuthSignupImport } from './routes/auth/signup'
import { Route as AuthSigninImport } from './routes/auth/signin'
import { Route as appChatImport } from './routes/(app)/chat'
import { Route as appAboutImport } from './routes/(app)/about'

// Create/Update Routes

const appRouteRoute = appRouteImport.update({
  id: '/(app)',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthSigninRoute = AuthSigninImport.update({
  id: '/auth/signin',
  path: '/auth/signin',
  getParentRoute: () => rootRoute,
} as any)

const appChatRoute = appChatImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => appRouteRoute,
} as any)

const appAboutRoute = appAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => appRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(app)': {
      id: '/(app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appRouteImport
      parentRoute: typeof rootRoute
    }
    '/(app)/about': {
      id: '/(app)/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof appAboutImport
      parentRoute: typeof appRouteImport
    }
    '/(app)/chat': {
      id: '/(app)/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof appChatImport
      parentRoute: typeof appRouteImport
    }
    '/auth/signin': {
      id: '/auth/signin'
      path: '/auth/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof AuthSigninImport
      parentRoute: typeof rootRoute
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface appRouteRouteChildren {
  appAboutRoute: typeof appAboutRoute
  appChatRoute: typeof appChatRoute
}

const appRouteRouteChildren: appRouteRouteChildren = {
  appAboutRoute: appAboutRoute,
  appChatRoute: appChatRoute,
}

const appRouteRouteWithChildren = appRouteRoute._addFileChildren(
  appRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof appRouteRouteWithChildren
  '/about': typeof appAboutRoute
  '/chat': typeof appChatRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
}

export interface FileRoutesByTo {
  '/': typeof appRouteRouteWithChildren
  '/about': typeof appAboutRoute
  '/chat': typeof appChatRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(app)': typeof appRouteRouteWithChildren
  '/(app)/about': typeof appAboutRoute
  '/(app)/chat': typeof appChatRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/chat' | '/auth/signin' | '/auth/signup'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/chat' | '/auth/signin' | '/auth/signup'
  id:
    | '__root__'
    | '/'
    | '/(app)'
    | '/(app)/about'
    | '/(app)/chat'
    | '/auth/signin'
    | '/auth/signup'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  appRouteRoute: typeof appRouteRouteWithChildren
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  appRouteRoute: appRouteRouteWithChildren,
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(app)",
        "/auth/signin",
        "/auth/signup"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(app)": {
      "filePath": "(app)/route.tsx",
      "children": [
        "/(app)/about",
        "/(app)/chat"
      ]
    },
    "/(app)/about": {
      "filePath": "(app)/about.tsx",
      "parent": "/(app)"
    },
    "/(app)/chat": {
      "filePath": "(app)/chat.tsx",
      "parent": "/(app)"
    },
    "/auth/signin": {
      "filePath": "auth/signin.tsx"
    },
    "/auth/signup": {
      "filePath": "auth/signup.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
